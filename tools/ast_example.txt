ls | cat -e; echo ok1 | cat -n 15 && toto || ls 2>/dev/null & echo ok2 | head

		Input afer lexer / paser

WORD -> [ls]
PIPE -> [(null)]
WORD -> [cat]
WORD -> [-e]
SEMI -> [(null)]
WORD -> [echo]
WORD -> [ok1]
PIPE -> [(null)]
WORD -> [cat]
WORD -> [-n]
WORD -> [15]
ANDAND -> [(null)]
WORD -> [toto]
OR -> [(null)]
WORD -> [ls]
IONUMBER -> [2]
GREAT -> [(null)]
WORD -> [/dev/null]
AND -> [(null)]
WORD -> [echo]
WORD -> [ok2]
PIPE -> [(null)]
WORD -> [head]

		1st step: separate list around ";"

						T_SEMI
					/			\
				   /			 \
				  /				  \
	WORD -> [ls]					WORD -> [echo]
	PIPE -> [(null)]				WORD -> [ok1]
	WORD -> [cat]					PIPE -> [(null)]
	WORD -> [-e]					WORD -> [cat]
									WORD -> [-n]
									WORD -> [15]
									ANDAND -> [(null)]
									WORD -> [toto]
									OR -> [(null)]
									WORD -> [ls]
									IONUMBER -> [2]
									GREAT -> [(null)]
									WORD -> [/dev/null]
									AND -> [(null)]
									WORD -> [echo]
									WORD -> [ok2]
									PIPE -> [(null)]
									WORD -> [head]

		2nd step: separate list around "&&"

							T_SEMI
					/					\
				   /					 \
				  /						  \
	WORD -> [ls]							T_ANDAND
	PIPE -> [(null)]					/				\
	WORD -> [cat]					   /				 \
	WORD -> [-e]					  /					  \
						WORD -> [echo]						WORD -> [toto]
						WORD -> [ok1]						OR -> [(null)]
						PIPE -> [(null)]					WORD -> [ls]
						WORD -> [cat]						IONUMBER -> [2]
						WORD -> [-n]						GREAT -> [(null)]
						WORD -> [15]						WORD -> [/dev/null]
															AND -> [(null)]
															WORD -> [echo]
															WORD -> [ok2]
															PIPE -> [(null)]
															WORD -> [head]

		3rd step: separate list around "||"

							T_SEMI
					/					\
				   /					 \
				  /						  \
	WORD -> [ls]							   T_ANDAND
	PIPE -> [(null)]					/					\
	WORD -> [cat]					   /					 \
	WORD -> [-e]					  /						  \
						WORD -> [echo]							  OR
						WORD -> [ok1]						/			\
						PIPE -> [(null)]				   /			 \
						WORD -> [cat]					  /				  \
						WORD -> [-n]		WORD -> [toto]					WORD -> [ls]
						WORD -> [15]										IONUMBER -> [2]
																			GREAT -> [(null)]
																			WORD -> [/dev/null]
																			AND -> [(null)]
																			WORD -> [echo]
																			WORD -> [ok2]
																			PIPE -> [(null)]
																			WORD -> [head]

		4th step: separate list around "&"

							T_SEMI
					/					\
				   /					 \
				  /						  \
	WORD -> [ls]							   T_ANDAND
	PIPE -> [(null)]					/					\
	WORD -> [cat]					   /					 \
	WORD -> [-e]					  /						  \
						WORD -> [echo]							 	OR
						WORD -> [ok1]						/				\
						PIPE -> [(null)]				   /				 \
						WORD -> [cat]					  /					  \
						WORD -> [-n]		WORD -> [toto]							 AND
						WORD -> [15]											/			\
																			   /			 \
																			  /				  \
																WORD -> [ls]					WORD -> [echo]
																IONUMBER -> [2]					WORD -> [ok2]
																GREAT -> [(null)]				PIPE -> [(null)]
																WORD -> [/dev/null]				WORD -> [head]
		5th step: rotate AND with OR


							T_SEMI
					/					\
				   /					 \
				  /						  \
	WORD -> [ls]							   T_ANDAND
	PIPE -> [(null)]					/					\
	WORD -> [cat]					   /					 \
	WORD -> [-e]					  /						  \
						WORD -> [echo]							 	AND
						WORD -> [ok1]						/				\
						PIPE -> [(null)]				   /				 \
						WORD -> [cat]					  /					  \
						WORD -> [-n]					 OR						WORD -> [echo]	 
						WORD -> [15]				/		  \					WORD -> [ok2]
												   /		   \				PIPE -> [(null)]
												  /			    \				WORD -> [head]
									WORD -> [toto]				WORD -> [ls]
																IONUMBER -> [2]
																GREAT -> [(null)]
																WORD -> [/dev/null]

		6th step: rotate AND with ANDAND

							T_SEMI
					/					\
				   /					 \
				  /						  \
	WORD -> [ls]							   	 AND
	PIPE -> [(null)]					/					\
	WORD -> [cat]					   /					 \
	WORD -> [-e]					  /						  \
								 T_ANDAND						WORD -> [echo]
							/				\					WORD -> [ok2]
						   /				 \					PIPE -> [(null)]
						  /					  \					WORD -> [head]
			WORD -> [echo]							OR
			WORD -> [ok1]						/		\
			PIPE -> [(null)]				   /		 \
			WORD -> [cat]					  /			  \
			WORD -> [-n]		WORD -> [toto]				WORD -> [ls]
			WORD -> [15]									IONUMBER -> [2]
															GREAT -> [(null)]
															WORD -> [/dev/null]
